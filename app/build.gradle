apply plugin: 'com.android.application'

/** **************************************************************************************/

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.opos.mobaddemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        //
        versionCode 420
        versionName '4.2.0'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions("default")
        multiDexEnabled true
        multiDexKeepProguard file('maindexlist.pro')
    }
    //
    dexOptions {
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    buildTypes {
        debug {
            debuggable true
            versionNameSuffix "_debug"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        games {}
        apps {}
        land {}
        custom {}
        noSplash {}
    }

    lintOptions {
        abortOnError false
    }

}

repositories {
    flatDir {
        dirs 'libs'   // aar目录
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.0'

    /*广告需要的依赖---开始*/
    if (rootProject.ext.isMavenDependencies) {
        implementation rootProject.ext.mavenDependencies
    } else {
        //implementation(name: 'mobad_normal_pub_395004_2021_08_19', ext: 'aar')
        /*
        * 请依赖正确的版本，此写法默认依赖app/libs/*.aar所有aar
        * */
        fileTree(dir: 'libs', include: '*.aar').each { File file ->
            def name = file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name };
            implementation(name: name, ext: 'aar')
        }
    }

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.okio:okio:2.5.0'
    /* 410版本之后不需要 */
/*    implementation 'androidx.sqlite:sqlite:2.0.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.sqlite:sqlite-framework:2.0.1'*/
    implementation 'org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.3.72'
    implementation 'android.arch.persistence:db-framework:1.1.1'//410版本新增
    //如果出现打包混淆时报错找不到类，可以加上complieOnly这个库，不依赖会出现预校验不通过
//    compileOnly fileTree(dir: '../demo_mobad/libs', include: ['tbs_sdk_thirdapp_v4.3.0.1020_43633_sharewithdownload_withoutGame_obfs_20190111_105200.jar'])
    /*广告需要的依赖---结束*/

    //以下为各个广告类型的的模块
    if ((new File('./app_banner')).exists()) {
        implementation project(":app_banner")//Banner广告
    }
    if ((new File('./app_inter')).exists()) {
        implementation project(":app_inter")//插屏广告
    }
    if ((new File('./app_banner')).exists() && (new File('./app_inter')).exists()) {
        implementation project(":app_mix")
    }
    if ((new File('./app_native')).exists()) {
        implementation project(":app_native")//原生广告
    }
    if ((new File('./app_native_template')).exists()) {
        implementation project(":app_native_template")//原生模板广告
    }
    if ((new File('./app_reward_video')).exists()) {
        implementation project(":app_reward_video")//激励适配广告
    }
    if ((new File('./app_content')).exists()) {
        implementation project(":app_content")//资讯广告
    }
    if ((new File('./app_hotsplash')).exists()) {
        implementation project(":app_hotsplash")//热闪屏广告
    }
    implementation project(":app_common")

}
